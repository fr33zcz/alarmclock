package alarmclock;

import java.io.IOException;
import java.io.Writer;

public interface IXmlWriter {
	/**
	 * Starts output of an entity. 
	 *
	 * @param name entity name
	 * 
	 * @throws IOException
	 */
	public XmlWriter writeEntity(String name) throws IOException;

	/**
	 * Writes out an attribute of current entity. 
	 * Any XML characters in the value are escaped.
	 * Currently it does not actually throw an exception, but 
	 * the API is set that way for future changes.
	 *
	 * @param  attr   name of attribute (when it's null new StringBuffer() is called on it)
	 * @param  value  value of attribute.
	 * 
	 * @throws IOException when attrs.append() fails
	 */
	public XmlWriter writeAttribute(String attr, String value);
	
	/**
	 * Ends output of current entity.
	 * 
	 * @throws IOException when stack is empty or writer.write() fails
	 */
	public XmlWriter endEntity() throws IOException;
	
	/**
	 * Closes this writer, however does not close the underlying 
	 * one. An exception is thrown when unclosed tags found on stack.
	 * 
	 * @throws IOException when stack is not empty
	 */
	public void close() throws IOException;
	
	/**
	 * Outputs body text. Any XML characters are escaped.
	 * 
	 * @throws IOException when writer.write() fails 
	 */
	public XmlWriter writeText(String text) throws IOException;

	/**
	 * Saves XML generated by XmlWriter to a file
	 * 
	 * @param writer
	 * @param filename
	 * 
	 * @throws IOException when failed to replace a file
	 */
	public void saveToFile(Writer writer, String filename) throws IOException;	
}
